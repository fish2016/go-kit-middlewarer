// Autogenerated code, do not change directly.
// To make changes to this file, please modify the templates at
// go-kit-middlewarer/tmpl/*.tmpl

package http

import (
	"context"
	"time"

	"github.com/go-kit/kit/endpoint"

	{{range .ImportsWithoutTime}}{{.}}
	{{end}}
	{{range .ExtraImports}}
	{{.}}{{end}}

	{{.BasePackageImport}}
)

var _ {{.BasePackageName}}.{{.InterfaceName}}

// DefaultRequestTimeout represents an overwritable Request timeout.
var DefaultRequestTimeout = time.Second

type client{{.InterfaceName}} struct {
	{{range .ExtraInterfaces}}{{.Type}}
	{{end}}
	{{range .Methods}}{{.MethodNameLcase}}Endpoint endpoint.Endpoint
	{{end}}
}

{{range .Methods}}
// {{.MethodName}} implements {{.BasePackage}}.{{.InterfaceName}}
func ({{.LocalName}} client{{.InterfaceName}}) {{.MethodName}}({{.MethodArguments}}) ({{.MethodResults}}) {
	{{if .HasContextParam}}
	if _, ok := {{.ContextParamName}}.Deadline(); !ok {
		_tmpCtx, _ctxCancelFunc := context.WithTimeout({{.ContextParamName}}, DefaultRequestTimeout)
		{{.ContextParamName}} = _tmpCtx
		defer _ctxCancelFunc()
	}
	{{else}}
	{{.ContextParamName}} := context.Background()
	{{.ContextParamName}}, _ctxCancelFunc := context.WithTimeout({{.ContextParamName}}, DefaultRequestTimeout)
	defer _ctxCancelFunc() 
	{{end}}

	_request := {{.MethodNameLcase}}Request{
		{{range .Params}}{{if .IsContext}}{{else}}{{template "param" .}}{{end}}
		{{end}}
	}

	_request.embedMime = new(embedMime)

	_response, err := {{.LocalName}}.{{.MethodNameLcase}}Endpoint(
		{{.ContextParamName}},
		&_request,
	)

	if err != nil {
		return
	}

	var ok bool
	err, ok = _response.(error)
	if ok {
		// we received an error from the server, so we'll return here.
		// if the Method has a return type named err, this will come through
		// it.
		return
	}

	{{if .Results}}
	_resp := _response.(*{{.MethodNameLcase}}Response)

	{{range .Results}}{{.Name}} = _resp.{{.PublicName}}
	{{end}}
	{{else}}
	_ = _response.(*{{.MethodNameLcase}}Response)
	{{end}}

	return
}
{{end}}

{{define "param"}}{{.PublicName}}: {{.Name}},{{end}}